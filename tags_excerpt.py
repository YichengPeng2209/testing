import xml.etree.ElementTree as ET
import requests
from urllib.parse import quote_plus
import json
import csv
import pymongo
from pymongo import MongoClient, InsertOne


# Extracting tag excerpts from Stack Overflow api

# set up local db, just for testing, need to refine for backend
client = pymongo.MongoClient()
db = client["FIT3170"]
collection = db["Testing"]

tag_root = ET.parse('Tags.xml').getroot()

# chunked_list contains sub arrays(each 20 tags in a sub array )
chunked_list = []
for i in range(0, len(tag_root), 20):
    chunked_list.append(tag_root[i:i + 20])
lonely_tag = []

print(len(chunked_list))

# Link for documentation of returning the wikis that go with the given set of tag :
# https://api.stackexchange.com/docs/wikis-by-tags#filter=default&site=stackoverflow&run=true

# {tag_list} can only contain up to 20 individual tag per request
#
count = 0
lonely_tag = []
for chunk in chunked_list[4:5]:
    # combine 20 tag name together with ;
    tag_list = quote_plus(';'.join([tag.get("TagName") for tag in chunk]))

    # only the tag name and the excerpt will be retrieved
    # filter is generated by stack exchange explorer
    r = requests.get(f'https://api.stackexchange.com/2.3/tags/{tag_list}/wikis?site=stackoverflow&filter=!SxNkuAm_UX0C3gkIE-')
    output = r.json()['items']


    for item in output:
        item["synonyms"] = []
        s = requests.get(f'https://api.stackexchange.com//2.3/tags/{item["tag_name"]}/synonyms?order=desc&sort=creation&site=stackoverflow&filter=!4)w2cdZmSgy293mI-')
        synonymList = s.json()['items']
        for synonym in synonymList:
            item["synonyms"].append(synonym["from_tag"])

    print(output)




    # tags = []
    # for t in json['items']:
    #     if 'tag_name' in t and 'excerpt' in t:
    #         tag_name = t['tag_name']
    #         excerpt = t['excerpt'].replace('\n','').replace('\r','')
    #         tags.append([tag_name, excerpt])
    #     else:
    #         lonely_tag.append(t)
    # with open('tag_test.csv', 'a') as f:
    #     for tag in tags:
    #         f.write('\t'.join(tag) + '\n')
    # #
    # print(f'quota_max: {json["quota_max"]}, quota_remaining: {json["quota_remaining"]}')
    # print(f'last tag_id: {chunk[-1].get("Id")}')
    # print(f'length of lonely_tag: {len(lonely_tag)}')


# with open('lonely_tag.txt', 'a') as f:
#     for tag in lonely_tag:
#         f.write(f'{tag["tag_name"]}\n')
#
# print(f'{len(lonely_tag)} lonely tag written into lonely_tag.txt')
# print(f'batch process finished')